services:
  postgres:
    image: postgres:14-alpine
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file: ./.env
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    ports:
      - "${POSTGRES_PORT}:5432"

  streamlit:
    build:
      context: .
      dockerfile: docker/streamlit.dockerfile
    working_dir: /app
    env_file: ./.env
    environment:
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - GOOGLE_API_KEY
      - STREAMLIT_SERVER_PORT
    ports:
      - "${STREAMLIT_SERVER_PORT}:8501"
    volumes:
      - ./:/app
    command: >
      streamlit run chatbot_app.py
      --server.port=8501
      --server.address=0.0.0.0
      --server.runOnSave=true
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pgdata: {}